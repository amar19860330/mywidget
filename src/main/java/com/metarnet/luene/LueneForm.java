/*
 * LueneForm.java
 * Created on __DATE__, __TIME__
 */

package com.metarnet.luene;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.HTMLEditorKit;

import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.search.highlight.InvalidTokenOffsetsException;

import com.metarnet.BasePanel;
import com.metarnet.component.ButtonEditor;
import com.metarnet.component.ButtonRenderer;
import com.metarnet.component.SwingEditDeal;
import com.metarnet.tool.Shell;
import com.metarnet.tool.TimeDateUtil;

/**
 * @author __USER__
 */
public class LueneForm extends BasePanel implements MyLueneProcess, SwingEditDeal
{

	private static final long serialVersionUID = 3987895824063981016L;

	public final String rootPath = getClass().getResource( "/" ).getPath();

	public final String indexPath = rootPath + "index";

	public final String luceneConfig = rootPath + "luceneConfig.xml";

	public DealXML dealXML;

	public IndexPathForm indexPathForm;

	public MyLuene myLuene;

	private String head[] = new String [] { "路径", "最后修改时间", "文件大小", "信息" };

	private Object [][] tableData;

	private int pageCount = 10;

	private long indexStartTime;

	private List<String> lucenePosition;

	/** Creates new form LueneForm */
	public LueneForm()
	{
		initComponents();
		myInit();
	}

	public void myInit()
	{
		dealXML = new DealXML();
		dealXML.check( luceneConfig );
		indexPathForm = new IndexPathForm( luceneConfig );
		makeDirExist( rootPath );
		makeDirExist( indexPath );
		initTable( null );

		HTMLEditorKit kit = new HTMLEditorKit();
		jEditorPaneInfo.setEditorKit( kit );
	}

	public void initTable( List<LuceneResult> list )
	{
		tableData = transTableData( list );
		DefaultTableModel defaultTableModel = new DefaultTableModel( tableData , head );
		jTableData.setModel( defaultTableModel );
		jTableData.getColumnModel().getColumn( 0 ).setPreferredWidth( 340 );
		jTableData.getColumnModel().getColumn( 1 ).setPreferredWidth( 135 );
		jTableData.getColumnModel().getColumn( 2 ).setPreferredWidth( 67 );
		if ( list != null && list.size() > 0 )
		{
			ButtonEditor buttonEditor = new ButtonEditor( new JTextField() );
			buttonEditor.setDeal( this );
			jTableData.getColumnModel().getColumn( 3 ).setCellRenderer( new ButtonRenderer() );
			jTableData.getColumnModel().getColumn( 3 ).setCellEditor( buttonEditor );
		}
		jTableData.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
	}

	private Object [][] transTableData( List<LuceneResult> list )
	{
		Object [][] obj = null;
		lucenePosition = new ArrayList<String>();
		if ( list == null )
		{
			obj = new Object [ pageCount ] [ 4 ];
			for( int i = 0 ; i < pageCount ; i ++ )
			{
				obj[ i ][ 0 ] = null;
				obj[ i ][ 1 ] = null;
				obj[ i ][ 2 ] = null;
				obj[ i ][ 3 ] = null;
			}
		}
		else
		{
			obj = new Object [ list.size() ] [ 4 ];
			int i = 0;
			for( LuceneResult luceneResult : list )
			{
				obj[ i ][ 0 ] = luceneResult.getPath();
				obj[ i ][ 2 ] = luceneResult.getUsableSpace();
				obj[ i ][ 1 ] = TimeDateUtil.getDateTime( luceneResult.getLastModityDate() );
				obj[ i ][ 3 ] = "信息";
				lucenePosition.add( luceneResult.getRemark() );
				i ++ ;
			}
		}
		return obj;
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents()
	{

		jLabel1 = new javax.swing.JLabel();
		jTextFieldAddPath = new javax.swing.JTextField();
		jButtonChoosePath = new javax.swing.JButton();
		jButtonAddPath = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jTextFieldQueryKey = new javax.swing.JTextField();
		jButtonQuery = new javax.swing.JButton();
		jButtonAlreayIndexPath = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableData = new javax.swing.JTable();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jTextFieldInfo = new javax.swing.JTextField();
		jButtonOpen = new javax.swing.JButton();
		jButtonOpenDir = new javax.swing.JButton();
		jScrollPane2 = new javax.swing.JScrollPane();
		jEditorPaneInfo = new javax.swing.JEditorPane();

		jLabel1.setText( "\u6dfb\u52a0\u6587\u4ef6\u5939\uff1a" );

		jButtonChoosePath.setText( "\u9009\u62e9" );
		jButtonChoosePath.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseClicked( java.awt.event.MouseEvent evt )
			{
				jButtonChoosePathMouseClicked( evt );
			}
		} );

		jButtonAddPath.setText( "\u6dfb\u52a0\u8def\u5f84" );
		jButtonAddPath.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseClicked( java.awt.event.MouseEvent evt )
			{
				jButtonAddPathMouseClicked( evt );
			}
		} );

		jLabel2.setText( "\u5173\u952e\u5b57\uff1a" );

		jButtonQuery.setText( "\u641c\u7d22" );
		jButtonQuery.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseClicked( java.awt.event.MouseEvent evt )
			{
				jButtonQueryMouseClicked( evt );
			}
		} );

		jButtonAlreayIndexPath.setText( "\u5df2\u68c0\u7d22\u7684\u76ee\u5f55" );
		jButtonAlreayIndexPath.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseClicked( java.awt.event.MouseEvent evt )
			{
				jButtonAlreayIndexPathMouseClicked( evt );
			}
		} );

		jTableData.setModel( new javax.swing.table.DefaultTableModel(
				new Object [] [] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } } , new String [] { "Title 1", "Title 2", "Title 3",
						"Title 4" } ) );
		jScrollPane1.setViewportView( jTableData );

		jLabel3.setText( "\u627e\u5230\u7684\u6587\u4ef6\uff1a" );

		jLabel4.setText( "\u4fe1\u606f\uff1a" );

		jButtonOpen.setText( "\u6253\u5f00\u6587\u4ef6" );
		jButtonOpen.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseClicked( java.awt.event.MouseEvent evt )
			{
				jButtonOpenMouseClicked( evt );
			}
		} );

		jButtonOpenDir.setText( "\u6253\u5f00\u76ee\u5f55" );
		jButtonOpenDir.addMouseListener( new java.awt.event.MouseAdapter()
		{
			public void mouseClicked( java.awt.event.MouseEvent evt )
			{
				jButtonOpenDirMouseClicked( evt );
			}
		} );

		jScrollPane2.setViewportView( jEditorPaneInfo );

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout( this );
		this.setLayout( layout );
		layout.setHorizontalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup( javax.swing.GroupLayout.Alignment.TRAILING )
												.addGroup(
														javax.swing.GroupLayout.Alignment.LEADING ,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
																				.addGroup( layout.createSequentialGroup().addGap( 46 , 46 , 46 ).addComponent( jLabel2 ) )
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap( 32 , 32 , 32 )
																								.addGroup(
																										layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addComponent( jLabel3 )
																												.addComponent( jLabel1 ) ) ) )
																.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
																.addGroup(
																		layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING , false ).addComponent( jTextFieldQueryKey )
																				.addComponent( jTextFieldAddPath , javax.swing.GroupLayout.DEFAULT_SIZE , 190 , Short.MAX_VALUE ) )
																.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
																.addGroup(
																		layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING , false )
																				.addGroup(
																						layout.createSequentialGroup().addComponent( jButtonChoosePath ).addGap( 18 , 18 , 18 )
																								.addComponent( jButtonAddPath ).addGap( 18 , 18 , 18 ).addComponent( jButtonAlreayIndexPath ) )
																				.addGroup(
																						layout.createSequentialGroup().addComponent( jButtonQuery ).addGap( 18 , 18 , 18 )
																								.addComponent( jTextFieldInfo ) ) ) )
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING , false )
																				.addComponent( jLabel4 )
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent( jScrollPane2 , javax.swing.GroupLayout.PREFERRED_SIZE , 519 ,
																										javax.swing.GroupLayout.PREFERRED_SIZE )
																								.addGap( 31 , 31 , 31 )
																								.addGroup(
																										layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
																												.addComponent( jButtonOpen ).addComponent( jButtonOpenDir ) ) )
																				.addComponent( jScrollPane1 ) ) ) ).addContainerGap( 54 , Short.MAX_VALUE ) ) );
		layout.setVerticalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE ).addComponent( jLabel1 )
										.addComponent( jTextFieldAddPath , javax.swing.GroupLayout.PREFERRED_SIZE , javax.swing.GroupLayout.DEFAULT_SIZE , javax.swing.GroupLayout.PREFERRED_SIZE )
										.addComponent( jButtonChoosePath ).addComponent( jButtonAddPath ).addComponent( jButtonAlreayIndexPath ) )
						.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.UNRELATED )
						.addGroup(
								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE ).addComponent( jLabel2 )
										.addComponent( jTextFieldQueryKey , javax.swing.GroupLayout.PREFERRED_SIZE , javax.swing.GroupLayout.DEFAULT_SIZE , javax.swing.GroupLayout.PREFERRED_SIZE )
										.addComponent( jButtonQuery )
										.addComponent( jTextFieldInfo , javax.swing.GroupLayout.PREFERRED_SIZE , javax.swing.GroupLayout.DEFAULT_SIZE , javax.swing.GroupLayout.PREFERRED_SIZE ) )
						.addGap( 18 , 18 , 18 )
						.addComponent( jLabel3 )
						.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED , javax.swing.GroupLayout.DEFAULT_SIZE , Short.MAX_VALUE )
						.addComponent( jScrollPane1 , javax.swing.GroupLayout.PREFERRED_SIZE , 203 , javax.swing.GroupLayout.PREFERRED_SIZE )
						.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED )
						.addGroup(
								layout.createParallelGroup( javax.swing.GroupLayout.Alignment.TRAILING )
										.addGroup(
												layout.createSequentialGroup().addComponent( jLabel4 ).addGap( 18 , 18 , 18 )
														.addComponent( jScrollPane2 , javax.swing.GroupLayout.PREFERRED_SIZE , 104 , javax.swing.GroupLayout.PREFERRED_SIZE )
														.addPreferredGap( javax.swing.LayoutStyle.ComponentPlacement.RELATED ) )
										.addGroup( layout.createSequentialGroup().addComponent( jButtonOpen ).addGap( 18 , 18 , 18 ).addComponent( jButtonOpenDir ) ) ).addGap( 62 , 62 , 62 ) ) );
	}// </editor-fold>
		// GEN-END:initComponents

	private void jButtonOpenDirMouseClicked( java.awt.event.MouseEvent evt )
	{
		int row = jTableData.getSelectedRow();
		if ( tableData[ row ][ 0 ] != null && ! "".equals( tableData[ row ][ 0 ] ) )
		{
			Shell shell = new Shell();
			String path = tableData[ row ][ 0 ].toString();

			shell.execNoResponse( "cmd /c start explorer /select,\"" + path+"\"" );
		}
	}

	private void jButtonOpenMouseClicked( java.awt.event.MouseEvent evt )
	{
		int row = jTableData.getSelectedRow();
		if ( tableData[ row ][ 0 ] != null && ! "".equals( tableData[ row ][ 0 ] ) )
		{
			Shell shell = new Shell();
			String path = tableData[ row ][ 0 ].toString();
			shell.execNoResponse( "cmd /c start " + path );
		}
	}

	private void jButtonQueryMouseClicked( java.awt.event.MouseEvent evt )
	{
		String queryKey = jTextFieldQueryKey.getText();
		if ( ! "".equals( queryKey ) )
		{

			try
			{
				myLuene = new MyLuene( this );

				List<LuceneResult> list = myLuene.queryHighlighter( queryKey , indexPath );
				initTable( list );

			}
			catch ( IOException e )
			{
				showInfo( "查询关键字" + queryKey + "的过程出错..\n" + e.getMessage() );
			}
			catch ( ParseException e )
			{
				showInfo( "查询关键字" + queryKey + "的过程出错..\n" + e.getMessage() );
			}
			catch ( InvalidTokenOffsetsException e )
			{
				showInfo( "查询关键字" + queryKey + "的过程出错..\n" + e.getMessage() );
			}
		}
	}

	public void showLueneProcess( long total , long now )
	{
		if ( total != now )
		{
			jTextFieldInfo.setText( ( long ) ( now * 0.1 * 1000 / total ) + "%" );
		}
		else
		{
			long used = System.currentTimeMillis() - indexStartTime;
			jTextFieldInfo.setText( "添加" + total + "个文件，用时" + used + "毫秒." );

			String addPath = jTextFieldAddPath.getText();
			dealXML.add( luceneConfig , addPath , "" );
			jTextFieldAddPath.setText( "" );
			jButtonAddPath.setEnabled( true );
		}
	}

	private void jButtonAddPathMouseClicked( java.awt.event.MouseEvent evt )
	{
		String addPath = jTextFieldAddPath.getText();
		if ( ! addPath.equals( "" ) )
		{
			int result = JOptionPane.showConfirmDialog( null , "您确认添加这个目录？" , "添加目录" , JOptionPane.OK_CANCEL_OPTION );
			if ( result == JOptionPane.OK_OPTION )
			{
				try
				{
					jButtonAddPath.setEnabled( false );
					indexStartTime = System.currentTimeMillis();
					myLuene = new MyLuene( this );
					myLuene.initWriter( indexPath );
					myLuene.setDataPath( addPath );
					Thread addIndexThread = new Thread( myLuene );
					addIndexThread.start();
				}
				catch ( IOException e )
				{
					showInfo( "给目录" + addPath + "添加索引的过程出错..\n" + e.getMessage() );
					jButtonAddPath.setEnabled( true );
				}
			}
		}
	}

	private void jButtonChoosePathMouseClicked( java.awt.event.MouseEvent evt )
	{
		String savepath = jTextFieldAddPath.getText();

		JFileChooser jFileChooser1 = new JFileChooser();
		jFileChooser1.setCurrentDirectory( new File( savepath ) );
		jFileChooser1.setDialogTitle( "添加文件夹" );
		jFileChooser1.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY );

		int ch = jFileChooser1.showDialog( this , "添加文件夹" );
		if ( ch == JFileChooser.APPROVE_OPTION )
		{
			jTextFieldAddPath.setText( jFileChooser1.getSelectedFile().getPath() );
		}
	}

	private void jButtonAlreayIndexPathMouseClicked( java.awt.event.MouseEvent evt )
	{
		print( "in jButtonAlreayIndexPath" );

		indexPathForm.setVisible( true );
		indexPathForm.setResizable( false );
		indexPathForm.initTable();
	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButtonAddPath;

	private javax.swing.JButton jButtonAlreayIndexPath;

	private javax.swing.JButton jButtonChoosePath;

	private javax.swing.JButton jButtonOpen;

	private javax.swing.JButton jButtonOpenDir;

	private javax.swing.JButton jButtonQuery;

	private javax.swing.JEditorPane jEditorPaneInfo;

	private javax.swing.JLabel jLabel1;

	private javax.swing.JLabel jLabel2;

	private javax.swing.JLabel jLabel3;

	private javax.swing.JLabel jLabel4;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JScrollPane jScrollPane2;

	private javax.swing.JTable jTableData;

	private javax.swing.JTextField jTextFieldAddPath;

	private javax.swing.JTextField jTextFieldInfo;

	private javax.swing.JTextField jTextFieldQueryKey;

	// End of variables declaration//GEN-END:variables

	@Override
	public void dealSwingEdit( Object obj )
	{
		int row = jTableData.getSelectedRow();
		if ( lucenePosition != null && lucenePosition.size() > 0 )
		{
			jEditorPaneInfo.setText( lucenePosition.get( row ) );
			//lucenePosition
		}

	}

}
